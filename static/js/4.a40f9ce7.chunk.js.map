{"version":3,"sources":["app/hooks.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","features/counter/containers/IncrementByAmount.tsx","features/counter/components/RevenueContainer.tsx","features/counter/Counter.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","IncrementByAmount","inProgress","selectInProgress","dispatch","useState","incrementAmount","setIncrementAmount","t","useTranslation","className","aria-label","type","inputMode","onChange","e","Number","parseInt","target","testid","label","mode","text","onClick","incrementByAmount","incrementAsync","RevenueContainer","count","date","Date","revenue","Math","PI","Counter","selectCount","isConfigured","selectIsConfigured","useEffect","initFromBackend","counterEl","increment","data-testid","role","decrement","center","flat","loadFromServer","LoadingIndicator","title"],"mappings":"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","file":"static/js/4.a40f9ce7.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from \"react\";\nimport { useAppSelector, useAppDispatch } from '../../../app/hooks';\nimport {\n  incrementByAmount,\n  incrementAsync,\n  selectInProgress,\n} from \"../counterSlice\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { AriaButton, FlexContainer } from \"zeigermann-component-lib\";\n\nexport function IncrementByAmount() {\n  const inProgress = useAppSelector(selectInProgress);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState<number>(2);\n  const { t } = useTranslation();\n\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode\n  return (\n      <FlexContainer>\n        <input\n          className=\"px-2 py-2 m-2 w-20\"\n          aria-label=\"Set increment amount\"\n          type=\"number\"\n          inputMode='numeric'\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(Number.parseInt(e.target.value))}\n        />\n        <AriaButton\n          testid=\"count:incrementByAmount\"\n          label={t(\"add\", { mode: \"sync\" })}\n          text={t(\"add\", { mode: \"sync\" })}\n          onClick={() => dispatch(incrementByAmount(incrementAmount ?? 0))}\n        />\n        <AriaButton\n          testid=\"count:incrementByAmountAsync\"\n          label={t(\"add\", { mode: \"async\" })}\n          text={t(\"add\", { mode: \"async\" })}\n          onClick={() => dispatch(incrementAsync(incrementAmount ?? 0))}\n          inProgress={inProgress['ADD_ASYNC']}\n        />\n      </FlexContainer>\n  );\n}\n","import { useTranslation } from \"react-i18next\";\n\ntype Props = Readonly<{\n  count: number;\n}>;\n\nexport function RevenueContainer({ count }: Props) {\n    const { t } = useTranslation();\n\n  return (\n    <p>\n      {t(\"users\", {\n        date: new Date(),\n        count: count,\n        revenue: count * Math.PI,\n      })}\n    </p>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useAppSelector, useAppDispatch } from '../../app/hooks';\n\nimport {\n  decrement,\n  increment,\n  // loadBackendConfig,\n  loadFromServer,\n  initFromBackend,\n  selectCount,\n  selectInProgress,\n  selectIsConfigured\n} from \"./counterSlice\";\n\nimport { useTranslation } from \"react-i18next\";\nimport { AriaButton, FlexContainer } from \"zeigermann-component-lib\";\nimport { LoadingIndicator } from \"../../common/components/LoadingIndicator\";\n\nimport { IncrementByAmount } from \"./containers/IncrementByAmount\";\nimport { RevenueContainer } from \"./components/RevenueContainer\";\n\nexport default function Counter() {\n  const count = useAppSelector(selectCount);\n  const inProgress = useAppSelector(selectInProgress);\n  const isConfigured = useAppSelector(selectIsConfigured);\n\n  const dispatch = useAppDispatch();\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    // dispatch(loadBackendConfig())\n    dispatch(initFromBackend())\n  }, [dispatch]);\n\n\n  const counterEl = (\n    <div>\n      <FlexContainer>\n        <AriaButton\n          testid=\"count:increment\"\n          label=\"Increment value\"\n          text=\"+\"\n          onClick={() => dispatch(increment())}\n        />\n        <span\n          data-testid=\"count:value\"\n          className=\"px-5 py-2 border-gray-900 border-2  m-2\"\n          aria-label=\"Value\"\n          role=\"presentation\"\n        >\n          {count}\n        </span>\n        <AriaButton\n          testid=\"count:decrement\"\n          label=\"Decrement value\"\n          text=\"-\"\n          onClick={() => dispatch(decrement())}\n        />\n      </FlexContainer>\n      <IncrementByAmount />\n      <FlexContainer center={true}>\n        <AriaButton\n          testid=\"count:load\"\n          label={t(\"load\")}\n          text={t(\"load\")}\n          flat={true}\n          onClick={() => dispatch(loadFromServer('users2.json'))}\n          inProgress={inProgress['LOAD']}\n        />\n      </FlexContainer>\n      <RevenueContainer count={count} />\n    </div>\n  );\n\n  return isConfigured ? counterEl : <LoadingIndicator title=\"Loading configuration...\" />;\n}\n"],"sourceRoot":""}